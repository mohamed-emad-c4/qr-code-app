import 'dart:typed_data';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:path_provider/path_provider.dart';
import 'package:qr_flutter/qr_flutter.dart';
import 'package:share_plus/share_plus.dart';
import 'dart:ui' as ui;
import 'dart:io';

class GenerateScreen extends StatefulWidget {
  GenerateScreen({Key? key}) : super(key: key);

  @override
  _GenerateScreenState createState() => _GenerateScreenState();
}

class _GenerateScreenState extends State<GenerateScreen> {
  final TextEditingController _inputController = TextEditingController();
  String? _lastGeneratedFilePath;

  // Generate QR Code with background
  Future<String?> _generateQRCodeWithBackground(String data) async {
    try {
      final qrPainter = QrPainter(
        data: data,
        version: QrVersions.auto,
        gapless: false,
      );

      final qrImage = await qrPainter.toImage(300);
      final qrByteData = await qrImage.toByteData(format: ui.ImageByteFormat.png);
      final qrBytes = qrByteData?.buffer.asUint8List();

      if (qrBytes != null) {
        final directory = await getExternalStorageDirectory();
        final folderPath = '${directory!.path}/Pictures/qrcode';
        final folder = Directory(folderPath);
        if (!await folder.exists()) {
          await folder.create(recursive: true);
        }

        final fileName = 'qr_code_${DateTime.now().millisecondsSinceEpoch}.png';
        final filePath = '$folderPath/$fileName';
        final file = File(filePath);
        await file.writeAsBytes(qrBytes);
        return filePath;
      }
    } catch (e) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text("Error generating QR Code: $e")),
      );
    }
    return null;
  }

  // Share the QR Code
  Future<void> _shareQRCode() async {
    if (_lastGeneratedFilePath != null) {
      final file = XFile(_lastGeneratedFilePath!);
      await Share.shareXFiles([file], text: "QR Code generated by the app.");
    } else {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text("Please generate a QR Code first.")),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("Generate QR Code")),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextField(
              controller: _inputController,
              decoration: InputDecoration(
                labelText: "Enter text or URL",
                border: OutlineInputBorder(),
              ),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () async {
                final input = _inputController.text.trim();
                if (input.isEmpty) {
                  ScaffoldMessenger.of(context).showSnackBar(
                    SnackBar(content: Text("Please enter text or URL to generate QR Code.")),
                  );
                  return;
                }

                final filePath = await _generateQRCodeWithBackground(input);
                if (filePath != null) {
                  setState(() {
                    _lastGeneratedFilePath = filePath;
                  });
                  ScaffoldMessenger.of(context).showSnackBar(
                    SnackBar(content: Text("QR Code generated successfully!")),
                  );
                }
              },
              child: Text("Generate QR Code"),
            ),
            SizedBox(height: 20),
            if (_lastGeneratedFilePath != null) ...[
              // Display the generated QR code
              Image.file(
                File(_lastGeneratedFilePath!),
                width: 200,
                height: 200,
                fit: BoxFit.contain,
              ),
              SizedBox(height: 20),
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                children: [
                  ElevatedButton(
                    onPressed: _shareQRCode,
                    child: Text("Share QR Code"),
                  ),
                  ElevatedButton(
                    onPressed: () {
                      ScaffoldMessenger.of(context).showSnackBar(
                        SnackBar(content: Text("QR Code saved to $_lastGeneratedFilePath")),
                      );
                    },
                    child: Text("View File Location"),
                  ),
                ],
              ),
            ],
          ],
        ),
      ),
    );
  }
}
